{"ast":null,"code":"var _jsxFileName = \"/workspace/crown-clothing/crown-clothing/v6_STRIPE/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault(); // We destructure auth of the event - the email and password of our state\n\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        // We await for auth.signinWithEmailAndPassword -  passing in email and password\n        // This asyncronously signs in using an email and password\n        await auth.signinWithEmailAndPassword(email, password); // On success, we clear our state\n\n        this.setState({\n          emaol: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.setState({\n        email: '',\n        password: ''\n      });\n    };\n\n    this.handleChange = event => {\n      // We destructure auth of the event - the name and the value from the target\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name; // Then dynamically set name to value as an object\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(CustomButton, {\n      onClick: signInWithGoogle,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["/workspace/crown-clothing/crown-clothing/v6_STRIPE/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","signinWithEmailAndPassword","setState","emaol","error","console","log","handleChange","target","value","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,+BAAvC;AAEA,OAAO,uBAAP;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SASnBC,YATmB,GASJ,MAAMC,KAAN,IAAe;AAC7BA,MAAAA,KAAK,CAACC,cAAN,GAD6B,CAG7B;;AAH6B,0BAID,KAAKC,KAJJ;AAAA,YAIrBC,KAJqB,eAIrBA,KAJqB;AAAA,YAIdC,QAJc,eAIdA,QAJc;;AAM7B,UAAI;AACH;AACA;AACA,cAAMX,IAAI,CAACY,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAN,CAHG,CAIH;;AACA,aAAKE,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaH,UAAAA,QAAQ,EAAE;AAAvB,SAAd;AACA,OAND,CAME,OAAOI,KAAP,EAAc;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;;AAED,WAAKF,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAd;AACA,KA1BkB;;AAAA,SA4BnBO,YA5BmB,GA4BJX,KAAK,IAAI;AACvB;AADuB,4BAECA,KAAK,CAACY,MAFP;AAAA,YAEfC,KAFe,iBAEfA,KAFe;AAAA,YAERC,IAFQ,iBAERA,IAFQ,EAIvB;;AACA,WAAKR,QAAL,CAAc;AAAE,SAACQ,IAAD,GAAQD;AAAV,OAAd;AACA,KAlCkB;;AAGlB,SAAKX,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAAb;AAIA;;AA6BDW,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFD,EAIC;AAAM,MAAA,QAAQ,EAAG,KAAKhB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,IAAI,EAAC,OAFN;AAGC,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWC,KAHnB;AAIC,MAAA,YAAY,EAAE,KAAKQ,YAJpB;AAKC,MAAA,KAAK,EAAC,OALP;AAMC,MAAA,QAAQ,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EASC,oBAAC,SAAD;AACC,MAAA,IAAI,EAAC,UADN;AAEC,MAAA,IAAI,EAAC,UAFN;AAGC,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE,QAHnB;AAIC,MAAA,YAAY,EAAE,KAAKO,YAJpB;AAKC,MAAA,KAAK,EAAC,UALP;AAMC,MAAA,QAAQ,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATD,EAiBC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEjB,gBAAvB;AAAyC,MAAA,cAAc,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFD,CAjBD,CAJD,CADD;AA+BA;;AArEmC;;AAwErC,eAAeC,MAAf","sourcesContent":["import React from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\n\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t};\n\t}\n\t\n\thandleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\t\n\t\t// We destructure auth of the event - the email and password of our state\n\t\tconst { email, password } = this.state;\n\t\t\n\t\ttry {\n\t\t\t// We await for auth.signinWithEmailAndPassword -  passing in email and password\n\t\t\t// This asyncronously signs in using an email and password\n\t\t\tawait auth.signinWithEmailAndPassword(email, password);\n\t\t\t// On success, we clear our state\n\t\t\tthis.setState({ emaol: '', password: ''})\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\t\n\t\tthis.setState({ email: '', password: '' });\n\t};\n\t\n\thandleChange = event => {\n\t\t// We destructure auth of the event - the name and the value from the target\n\t\tconst { value, name } = event.target;\n\t\t\n\t\t// Then dynamically set name to value as an object\n\t\tthis.setState({ [name]: value });\n\t};\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className='sign-in'>\n\t\t\t\t<h2>I already have an account</h2>\n\t\t\t\t<span>Sign in with your email and password</span>\n\t\t\t\t\n\t\t\t\t<form onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tlabel='email'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='buttons'>\n\t\t\t\t\t\t<CustomButton type=\"submit\"> Sign in </CustomButton>\n\t\t\t\t\t\t<CustomButton onClick={signInWithGoogle} isGoogleSignIn>\n\t\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}