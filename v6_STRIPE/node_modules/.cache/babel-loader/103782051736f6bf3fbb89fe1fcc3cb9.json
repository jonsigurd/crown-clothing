{"ast":null,"code":"var _jsxFileName = \"/workspace/crown-clothing/crown-clothing/v4_SELECTORS/src/components/collection-preview/collection-preview.component.jsx\";\nimport React from 'react';\nimport CollectionItem from '../collection-item/collection-item.component';\nimport './collection-preview.styles.scss';\n\nconst CollectionPreview = ({\n  title,\n  items\n}) => // In className='preview' we spread in all of the props from the item itself other than the id, because\n// we use it as the key and then spread wverything else in as a prop, which we then destructure auth\n// of our props object and use inside of our collection item (collection-item.component.jsx)\n// NOW INSTEAD OF THE ABOVE, we now just want the whole item (l.17), and call item.id for our key (l.18) and pass item as the item instead of (...otherItemProps)\nReact.createElement(\"div\", {\n  className: \"collection-preview\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, title.toUpperCase()), React.createElement(\"div\", {\n  className: \"preview\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, items.filter((item, idx) => idx < 4).map(item => React.createElement(CollectionItem, {\n  key: item.id,\n  item: item,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}))));\n\nexport default CollectionPreview;","map":{"version":3,"sources":["/workspace/crown-clothing/crown-clothing/v4_SELECTORS/src/components/collection-preview/collection-preview.component.jsx"],"names":["React","CollectionItem","CollectionPreview","title","items","toUpperCase","filter","item","idx","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,8CAA3B;AAEA,OAAO,kCAAP;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KACzB;AACA;AACA;AACA;AACA;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAI,EAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAuBD,KAAK,CAACE,WAAN,EAAvB,CADD,EAEC;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACED,KAAK,CACJE,MADD,CACQ,CAACC,IAAD,EAAOC,GAAP,KAAeA,GAAG,GAAG,CAD7B,EAECC,GAFD,CAEMF,IAAD,IACL,oBAAC,cAAD;AAAgB,EAAA,GAAG,EAAEA,IAAI,CAACG,EAA1B;AAA8B,EAAA,IAAI,EAAEH,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHA,CADF,CAFD,CALD;;AAiBA,eAAeL,iBAAf","sourcesContent":["import React from 'react';\n\nimport CollectionItem from '../collection-item/collection-item.component';\n\nimport './collection-preview.styles.scss';\n\nconst CollectionPreview = ({ title, items }) => (\n\t// In className='preview' we spread in all of the props from the item itself other than the id, because\n\t// we use it as the key and then spread wverything else in as a prop, which we then destructure auth\n\t// of our props object and use inside of our collection item (collection-item.component.jsx)\n\t// NOW INSTEAD OF THE ABOVE, we now just want the whole item (l.17), and call item.id for our key (l.18) and pass item as the item instead of (...otherItemProps)\n\t<div className='collection-preview'>\n\t\t<h1 className='title'>{title.toUpperCase()}</h1>\n\t\t<div className='preview'>\n\t\t\t{items\n\t\t\t\t.filter((item, idx) => idx < 4)\n\t\t\t\t.map((item) => (\n\t\t\t\t<CollectionItem key={item.id} item={item} />\n\t\t\t\t))}\n\t\t</div>\n\t</div>\n)\n\nexport default CollectionPreview;"]},"metadata":{},"sourceType":"module"}