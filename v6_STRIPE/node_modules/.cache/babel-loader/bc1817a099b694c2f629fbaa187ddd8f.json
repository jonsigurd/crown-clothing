{"ast":null,"code":"import _objectWithoutProperties from \"/workspace/crown-clothing/crown-clothing/v5_ADVANCED_ROUTING_AND_STATE_NORMALIZATION/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/workspace/crown-clothing/crown-clothing/v5_ADVANCED_ROUTING_AND_STATE_NORMALIZATION/src/components/collections-overview/collections-overview.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionPreview from '../collection-preview/collection-preview.component';\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\nimport './collections-overview.styles.scss'; // Now we just render a regular functional component, because we don't need access to state, and thus\n// there is no need to use a class component\n\nconst CollectionsOverview = ({\n  collections\n}) => // Local state inside constructor is moved to shop.reducer.js (now we don't use class here)\n// Here we just pull collections off of our props that we get in here\nReact.createElement(\"div\", {\n  className: \"collections-overview\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, collections.map((_ref) => {\n  let id = _ref.id,\n      otherCollectionProps = _objectWithoutProperties(_ref, [\"id\"]);\n\n  return React.createElement(CollectionPreview, Object.assign({\n    key: id\n  }, otherCollectionProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n})); // Here the createStructuredSelector call will automatically pass our top level state that we get as\n// our mapStateToProps into each subsequent selector\n\n\nconst mapStateToProps = createStructuredSelector({\n  // The props we want point to the correct selector now\n  collections: selectCollectionsForPreview\n});\nexport default connect(mapStateToProps)(CollectionsOverview);","map":{"version":3,"sources":["/workspace/crown-clothing/crown-clothing/v5_ADVANCED_ROUTING_AND_STATE_NORMALIZATION/src/components/collections-overview/collections-overview.component.jsx"],"names":["React","connect","createStructuredSelector","CollectionPreview","selectCollectionsForPreview","CollectionsOverview","collections","map","id","otherCollectionProps","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,iBAAP,MAA8B,oDAA9B;AAEA,SAASC,2BAAT,QAA4C,iCAA5C;AAEA,OAAO,oCAAP,C,CAEA;AACA;;AACA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAC3B;AAEA;AACA;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACEA,WAAW,CAACC,GAAZ,CAAgB;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA,MAAUC,oBAAV;;AAAA,SAChB,oBAAC,iBAAD;AAAmB,IAAA,GAAG,EAAED;AAAxB,KAAgCC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADgB;AAAA,CAAhB,CADF,CAJD,C,CAWA;AACA;;;AACA,MAAMC,eAAe,GAAGR,wBAAwB,CAAC;AAChD;AACAI,EAAAA,WAAW,EAAEF;AAFmC,CAAD,CAAhD;AAKA,eAAeH,OAAO,CAACS,eAAD,CAAP,CAAyBL,mBAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionPreview from '../collection-preview/collection-preview.component';\n\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\n\nimport './collections-overview.styles.scss';\n\n// Now we just render a regular functional component, because we don't need access to state, and thus\n// there is no need to use a class component\nconst CollectionsOverview = ({ collections }) => (\n\t// Local state inside constructor is moved to shop.reducer.js (now we don't use class here)\n\t\n\t// Here we just pull collections off of our props that we get in here\n\t<div className='collections-overview'>\n\t\t{collections.map(({ id, ...otherCollectionProps }) => (\n\t\t\t<CollectionPreview key={id} {...otherCollectionProps} />\n\t\t))}\n\t</div>\n);\n\n// Here the createStructuredSelector call will automatically pass our top level state that we get as\n// our mapStateToProps into each subsequent selector\nconst mapStateToProps = createStructuredSelector({\n\t// The props we want point to the correct selector now\n\tcollections: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);"]},"metadata":{},"sourceType":"module"}