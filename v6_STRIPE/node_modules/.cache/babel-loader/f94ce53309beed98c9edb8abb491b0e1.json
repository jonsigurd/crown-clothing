{"ast":null,"code":"// Functions that return objects\n// Making sure that the objects are in the correct format that the actions is expected to be\n// Our user action - taking user object as parameter (created inside firebase.utils)\n// Fireing of an action that holds the value that we were setting state to before (we call it here: user)\nexport const setCurrentUser = user => ({\n  // Returns an object of type = SET_CURRENT_USER (the same as our reducer expects) - an action object\n  type: 'SET_CURRENT_USER',\n  payload: user\n});","map":{"version":3,"sources":["/workspace/crown-clothing/crown-clothing/v2_REDUX/src/redux/user/user.actions.js"],"names":["setCurrentUser","user","type","payload"],"mappings":"AAAA;AACA;AAEA;AACA;AACA,OAAO,MAAMA,cAAc,GAAGC,IAAI,KAAK;AACtC;AACAC,EAAAA,IAAI,EAAE,kBAFgC;AAGtCC,EAAAA,OAAO,EAAEF;AAH6B,CAAL,CAA3B","sourcesContent":["// Functions that return objects\n// Making sure that the objects are in the correct format that the actions is expected to be\n\n// Our user action - taking user object as parameter (created inside firebase.utils)\n// Fireing of an action that holds the value that we were setting state to before (we call it here: user)\nexport const setCurrentUser = user => ({\n\t// Returns an object of type = SET_CURRENT_USER (the same as our reducer expects) - an action object\n\ttype: 'SET_CURRENT_USER',\n\tpayload: user\n});\n"]},"metadata":{},"sourceType":"module"}