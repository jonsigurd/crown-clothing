{"ast":null,"code":"var _jsxFileName = \"/workspace/crown-clothing/crown-clothing/v4_SELECTORS/src/components/header/header.component.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // An higher order component that lets us modify our component to have access to things related to redux\n\nimport { connect } from 'react-redux';\nimport { auth } from '../../firebase/firebase.utils';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/crown.svg\";\nimport './header.styles.scss';\n\nconst Header = ({\n  currentUser,\n  hidden\n}) => React.createElement(\"div\", {\n  className: \"header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(Link, {\n  className: \"logo-container\",\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(Logo, {\n  className: \"logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"options\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(Link, {\n  className: \"option\",\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"SHOP\"), React.createElement(Link, {\n  className: \"option\",\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"CONTACT\"), currentUser ? React.createElement(\"div\", {\n  className: \"option\",\n  onClick: () => auth.signOut(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"SIGN OUT\") : React.createElement(Link, {\n  className: \"option\",\n  to: \"/signin\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"SIGN IN\"), React.createElement(CartIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n})), hidden ? null : React.createElement(CartDropdown, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})); // First connect argument (second in App.js)\n// Function that returns an object, where the name of the prop is the prop we want to pass in and the value will be the value\n// Here we destructure where we specify exactly what we want of the states user and cart (destructuring nested values)\n\n\nconst mapStateToProps = ({\n  user: {\n    currentUser\n  },\n  cart: {\n    hidden\n  }\n}) => ({\n  // props that have the current state of user and cart\n  currentUser,\n  hidden\n}); // Taking the function that allows us to access the state as first parameter (our root reducer) - here we get the null value as currentUser\n\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/workspace/crown-clothing/crown-clothing/v4_SELECTORS/src/components/header/header.component.jsx"],"names":["React","Link","connect","auth","CartIcon","CartDropdown","Header","currentUser","hidden","signOut","mapStateToProps","user","cart"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,IAAT,QAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;;AAIA,OAAO,sBAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KACb;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,gBAAhB;AAAiC,EAAA,EAAE,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIE;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAyB,EAAA,EAAE,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAIE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAyB,EAAA,EAAE,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAOGD,WAAW,GACV;AAAK,EAAA,SAAS,EAAC,QAAf;AAAwB,EAAA,OAAO,EAAE,MAAMJ,IAAI,CAACM,OAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,GAKV,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAyB,EAAA,EAAE,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZJ,EAgBD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAhBC,CAJF,EAuBCD,MAAM,GAAG,IAAH,GACN,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAxBD,CADF,C,CA8BA;AACA;AACA;;;AACA,MAAME,eAAe,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAAEJ,IAAAA;AAAF,GAAP;AAAwBK,EAAAA,IAAI,EAAE;AAAEJ,IAAAA;AAAF;AAA9B,CAAD,MAAgD;AACvE;AACAD,EAAAA,WAFuE;AAGvEC,EAAAA;AAHuE,CAAhD,CAAxB,C,CAMA;;;AACA,eAAeN,OAAO,CAACQ,eAAD,CAAP,CAAyBJ,MAAzB,CAAf","sourcesContent":["  \nimport React from 'react';\nimport { Link } from 'react-router-dom';\n// An higher order component that lets us modify our component to have access to things related to redux\nimport { connect } from 'react-redux';\n\nimport { auth } from '../../firebase/firebase.utils';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\n\nimport { ReactComponent as Logo } from '../../assets/crown.svg';\n\nimport './header.styles.scss';\n\nconst Header = ({ currentUser, hidden}) => (\n  <div className='header'>\n    <Link className='logo-container' to='/'>\n      <Logo className='logo' />\n    </Link>\n    <div className='options'>\n      <Link className='option' to='/shop'>\n        SHOP\n      </Link>\n      <Link className='option' to='/shop'>\n        CONTACT\n      </Link>\n      {currentUser ? (\n        <div className='option' onClick={() => auth.signOut()}>\n          SIGN OUT\n        </div>\n      ) : (\n        <Link className='option' to='/signin'>\n          SIGN IN\n        </Link>\n      )}\n\t\t\t<CartIcon />\n    </div>\n\t\t{\n\t\t\thidden ? null :\n\t\t\t<CartDropdown />\n\t\t}\n  </div>\n);\n\n// First connect argument (second in App.js)\n// Function that returns an object, where the name of the prop is the prop we want to pass in and the value will be the value\n// Here we destructure where we specify exactly what we want of the states user and cart (destructuring nested values)\nconst mapStateToProps = ({user: { currentUser }, cart: { hidden }}) => ({\n\t// props that have the current state of user and cart\n\tcurrentUser,\n\thidden\n});\n\n// Taking the function that allows us to access the state as first parameter (our root reducer) - here we get the null value as currentUser\nexport default connect(mapStateToProps)(Header);"]},"metadata":{},"sourceType":"module"}