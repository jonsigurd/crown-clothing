{"ast":null,"code":"var _jsxFileName = \"/workspace/crown-clothing/crown-clothing/v4_SELECTORS/src/components/checkout-item/checkout-item.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { clearItemFromCart } from '../../redux/cart/cart.actions';\nimport './checkout-item.styles.scss'; // Here we pass the whole item as a prop, because we want to be able to increase and decrease the\n// quantity and also remove the item inside our CheckoutItem component\n// We now do an explicit return of our function by making brackets{}\n\nconst CheckoutItem = ({\n  cartItem,\n  clearItem\n}) => {\n  // Here we destructure the props of the cartItem, because we still want these values as we use them\n  // inside of our component definition below, but need to access the item itself\n  const name = cartItem.name,\n        imageUrl = cartItem.imageUrl,\n        price = cartItem.price,\n        quantity = cartItem.quantity; // On our remove we do a unanymous function on onClick that calls our new clearItem function that\n  // we're passing in as a prop, and then we pass cartItem in. Now clearItem works!\n\n  return React.createElement(\"div\", {\n    className: \"checkout-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"arrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"\\u276E\"), name, React.createElement(\"div\", {\n    className: \"arrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"\\u276F\")), React.createElement(\"span\", {\n    className: \"quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"arrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u276E\"), quantity), React.createElement(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, price), React.createElement(\"div\", {\n    className: \"remove\",\n    onClick: () => clearItem(cartItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"\\u2715\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","map":{"version":3,"sources":["/workspace/crown-clothing/crown-clothing/v4_SELECTORS/src/components/checkout-item/checkout-item.component.jsx"],"names":["React","connect","clearItemFromCart","CheckoutItem","cartItem","clearItem","name","imageUrl","price","quantity","mapDispatchToProps","dispatch","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAO,6BAAP,C,CAEA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6B;AACjD;AACA;AAFiD,QAGzCC,IAHyC,GAGLF,QAHK,CAGzCE,IAHyC;AAAA,QAGnCC,QAHmC,GAGLH,QAHK,CAGnCG,QAHmC;AAAA,QAGzBC,KAHyB,GAGLJ,QAHK,CAGzBI,KAHyB;AAAA,QAGlBC,QAHkB,GAGLL,QAHK,CAGlBK,QAHkB,EAIjD;AACA;;AACA,SACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,GAAG,EAAEF,QAAV;AAAoB,IAAA,GAAG,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,EAIC;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEED,IAFF,EAGC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,CAJD,EASC;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEEG,QAFF,CATD,EAYC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,KAAzB,CAZD,EAaC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAE,MAAMH,SAAS,CAACD,QAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbD,CADD;AAiBA,CAvBD;;AAyBA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACvCN,EAAAA,SAAS,EAAEO,IAAI,IAAID,QAAQ,CAACT,iBAAiB,CAACU,IAAD,CAAlB;AADY,CAAL,CAAnC;;AAIA,eAAeX,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCP,YAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { clearItemFromCart } from '../../redux/cart/cart.actions';\n\nimport './checkout-item.styles.scss';\n\n// Here we pass the whole item as a prop, because we want to be able to increase and decrease the\n// quantity and also remove the item inside our CheckoutItem component\n// We now do an explicit return of our function by making brackets{}\nconst CheckoutItem = ({ cartItem, clearItem }) => {\n\t// Here we destructure the props of the cartItem, because we still want these values as we use them\n\t// inside of our component definition below, but need to access the item itself\n\tconst { name, imageUrl, price, quantity } = cartItem;\n\t// On our remove we do a unanymous function on onClick that calls our new clearItem function that\n\t// we're passing in as a prop, and then we pass cartItem in. Now clearItem works!\n\treturn (\n\t\t<div className='checkout-item'>\n\t\t\t<div className='image-container'>\n\t\t\t\t<img src={imageUrl} alt='item' />\n\t\t\t</div>\n\t\t\t<span className='name'>\n\t\t\t\t<div className='arrow'>&#10094;</div>\n\t\t\t\t{name}\n\t\t\t\t<div className='arrow'>&#10095;</div>\n\t\t\t</span>\n\t\t\t<span className='quantity'>\n\t\t\t\t<div className='arrow'>&#10094;</div>\n\t\t\t\t{quantity}</span>\n\t\t\t<span className='price'>{price}</span>\n\t\t\t<div className='remove' onClick={() => clearItem(cartItem)}>&#10005;</div>\n\t\t</div>\n\t);\n};\n\nconst mapDispatchToProps = dispatch => ({\n\tclearItem: item => dispatch(clearItemFromCart(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);"]},"metadata":{},"sourceType":"module"}