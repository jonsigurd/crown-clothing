{"ast":null,"code":"var _jsxFileName = \"/workspace/crown-clothing/crown-clothing/v4_SELECTORS/src/components/checkout-item/checkout-item.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { clearItemFromCart } from '../../redux/cart/cart.actions';\nimport './checkout-item.styles.scss'; // Here we pass the whole item as a prop, because we want to be able to increase and decrease the\n// quantity and also remove the item inside our CheckoutItem component\n// We now do an explicit return of our function by making brackets{}\n\nconst CheckoutItem = ({\n  cartItem: {\n    name,\n    imageUrl,\n    price,\n    quantity\n  }\n}) => // Here we destructure the props we cutted out above of the item (except from id), because we still \n// want these values as we use them inside of our component definition below, but need to access\n// the item itself\nReact.createElement(\"div\", {\n  className: \"checkout-item\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"image-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: imageUrl,\n  alt: \"item\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n})), React.createElement(\"span\", {\n  className: \"name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, name), React.createElement(\"span\", {\n  className: \"quantity\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, quantity), React.createElement(\"span\", {\n  className: \"price\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, price), React.createElement(\"div\", {\n  className: \"remove\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"\\u2715\"));\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","map":{"version":3,"sources":["/workspace/crown-clothing/crown-clothing/v4_SELECTORS/src/components/checkout-item/checkout-item.component.jsx"],"names":["React","connect","clearItemFromCart","CheckoutItem","cartItem","name","imageUrl","price","quantity","mapDispatchToProps","dispatch","clearItem","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAO,6BAAP,C,CAEA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB;AAAZ,CAAD,KACpB;AACA;AACA;AACA;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAK,EAAA,GAAG,EAAEF,QAAV;AAAoB,EAAA,GAAG,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,EAIC;AAAM,EAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwBD,IAAxB,CAJD,EAKC;AAAM,EAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA4BG,QAA5B,CALD,EAMC;AAAM,EAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyBD,KAAzB,CAND,EAOC;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD,CAJD;;AAeA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACvCC,EAAAA,SAAS,EAAEC,IAAI,IAAIF,QAAQ,CAACR,iBAAiB,CAACU,IAAD,CAAlB;AADY,CAAL,CAAnC;;AAIA,eAAeX,OAAO,CAAC,IAAD,EAAOQ,kBAAP,CAAP,CAAkCN,YAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { clearItemFromCart } from '../../redux/cart/cart.actions';\n\nimport './checkout-item.styles.scss';\n\n// Here we pass the whole item as a prop, because we want to be able to increase and decrease the\n// quantity and also remove the item inside our CheckoutItem component\n// We now do an explicit return of our function by making brackets{}\nconst CheckoutItem = ({ cartItem: { name, imageUrl, price, quantity } }) => (\n\t// Here we destructure the props we cutted out above of the item (except from id), because we still \n\t// want these values as we use them inside of our component definition below, but need to access\n\t// the item itself\n\t<div className='checkout-item'>\n\t\t<div className='image-container'>\n\t\t\t<img src={imageUrl} alt='item' />\n\t\t</div>\n\t\t<span className='name'>{name}</span>\n\t\t<span className='quantity'>{quantity}</span>\n\t\t<span className='price'>{price}</span>\n\t\t<div className='remove'>&#10005;</div>\n\t</div>\n);\n\nconst mapDispatchToProps = dispatch => ({\n\tclearItem: item => dispatch(clearItemFromCart(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);"]},"metadata":{},"sourceType":"module"}