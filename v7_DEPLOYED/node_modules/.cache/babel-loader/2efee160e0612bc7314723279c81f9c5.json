{"ast":null,"code":"var _jsxFileName = \"/workspace/crown-clothing/crown-clothing/v3_CART/src/components/cart-icon/cart-icon.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport './cart-icon.styles.scss'; // After doing the mapDispatchToProps, we are able to access toggleCartHidden and bind it onClick\n// After doing the mapStateToProps, we are able to access the itemCount inside the span\n\nconst CartIcon = ({\n  toggleCartHidden,\n  itemCount\n}) => // Binding toggleCartHidden onClick\nReact.createElement(\"div\", {\n  className: \"cart-icon\",\n  onClick: toggleCartHidden,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(ShoppingIcon, {\n  className: \"shopping-icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  className: \"item-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, String(itemCount)));\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n}); // Getting state by destructuring of cart and pull of cartItems\n\n\nconst mapStateToProps = ({\n  cart: {\n    cartItems\n  }\n}) => ({\n  // Passing in itemCount, which is equal to accumulating the quantity on each of our cart items\n  // To get quantity to one final value, we call the native array method cartItems.reduce() and pass in\n  // 0 as the initial accumulator value, where we have the accumulatedQuantity as the first argument and\n  // cartItem as the second. This accumulates all the quantities on all the cart items\n  itemCount: cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quntity, 0)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["/workspace/crown-clothing/crown-clothing/v3_CART/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","connect","toggleCartHidden","CartIcon","itemCount","String","mapDispatchToProps","dispatch","mapStateToProps","cart","cartItems","reduce","accumulatedQuantity","cartItem","quntity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;;AAIA,OAAO,yBAAP,C,CAEA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,gBAAF;AAAoBE,EAAAA;AAApB,CAAD,KAChB;AACA;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,OAAO,EAAEF,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAEC;AAAM,EAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA8BG,MAAM,CAAED,SAAF,CAApC,CAFD,CAFD;;AAQA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACvCL,EAAAA,gBAAgB,EAAE,MAAMK,QAAQ,CAACL,gBAAgB,EAAjB;AADO,CAAL,CAAnC,C,CAIA;;;AACA,MAAMM,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAR,CAAD,MAA8B;AACrD;AACA;AACA;AACA;AACAN,EAAAA,SAAS,EAAEM,SAAS,CAACC,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,OAAnF,EAA4F,CAA5F;AAL0C,CAA9B,CAAxB;;AAQA,eAAeb,OAAO,CAACO,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CH,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nimport { ReactComponent as ShoppingIcon } from '../../assets/shopping-bag.svg';\n\nimport './cart-icon.styles.scss';\n\n// After doing the mapDispatchToProps, we are able to access toggleCartHidden and bind it onClick\n// After doing the mapStateToProps, we are able to access the itemCount inside the span\nconst CartIcon = ({ toggleCartHidden, itemCount }) => (\n\t// Binding toggleCartHidden onClick\n\t<div className='cart-icon' onClick={toggleCartHidden}>\n\t\t<ShoppingIcon className='shopping-icon' />\n\t\t<span className='item-count'>{String (itemCount)}</span>\n\t</div>\n);\n\nconst mapDispatchToProps = dispatch => ({\n\ttoggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\n// Getting state by destructuring of cart and pull of cartItems\nconst mapStateToProps = ({ cart: { cartItems } }) => ({\n\t// Passing in itemCount, which is equal to accumulating the quantity on each of our cart items\n\t// To get quantity to one final value, we call the native array method cartItems.reduce() and pass in\n\t// 0 as the initial accumulator value, where we have the accumulatedQuantity as the first argument and\n\t// cartItem as the second. This accumulates all the quantities on all the cart items\n\titemCount: cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quntity, 0)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);"]},"metadata":{},"sourceType":"module"}