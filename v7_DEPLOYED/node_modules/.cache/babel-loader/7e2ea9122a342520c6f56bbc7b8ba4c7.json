{"ast":null,"code":"// Two types of selectors\n// 1. input selector - doesn't use createSelector\n// 2. output selector - does use input selectors and createSelector\nimport { createSelector } from 'reselect';\n\nconst selectUser = state => state.user;\n\nexport const selectCurrentUser = createSelector( // Instead of making an array, we can pass the selectors in as successive arguments like so:\n// selectUser,\n// selectCart\n[selectUser], user => user.currentUser);","map":{"version":3,"sources":["/workspace/crown-clothing/crown-clothing/v4_SELECTORS/src/redux/user/user.selectors.js"],"names":["createSelector","selectUser","state","user","selectCurrentUser","currentUser"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,EAC9C;AACA;AACA;AACA,CAACC,UAAD,CAJ8C,EAK7CE,IAAD,IAAUA,IAAI,CAACE,WAL+B,CAAxC","sourcesContent":["// Two types of selectors\n// 1. input selector - doesn't use createSelector\n// 2. output selector - does use input selectors and createSelector\nimport { createSelector } from 'reselect';\n\nconst selectUser = state => state.user;\n\nexport const selectCurrentUser = createSelector(\n\t// Instead of making an array, we can pass the selectors in as successive arguments like so:\n\t// selectUser,\n\t// selectCart\n\t[selectUser],\n\t(user) => user.currentUser\n)"]},"metadata":{},"sourceType":"module"}