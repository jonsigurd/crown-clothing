{"ast":null,"code":"// middlewares catch actions happening between the action taking and the root reducer\nimport { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger'; // console.log the actions\n\nimport rootReducer from './root-reducer'; // The store expects the middlewares as arrays\n\nconst middlewares = [logger]; // Spreading in all of the methods or values in the logger array in the function call as individual arguments\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport default store;","map":{"version":3,"sources":["/workspace/crown-clothing/crown-clothing/v3_CART/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","middlewares","store"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAAmC;;AAEnC,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACF,MAAD,CAApB,C,CAEA;;AACA,MAAMG,KAAK,GAAGL,WAAW,CAACG,WAAD,EAAcF,eAAe,CAAC,GAAGG,WAAJ,CAA7B,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["// middlewares catch actions happening between the action taking and the root reducer\nimport { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger'; // console.log the actions\n\nimport rootReducer from './root-reducer';\n\n// The store expects the middlewares as arrays\nconst middlewares = [logger];\n\n// Spreading in all of the methods or values in the logger array in the function call as individual arguments\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}