{"ast":null,"code":"// middlewares catch actions happening between the action taking and the root reducer\nimport { createStore, applyMiddleware } from 'redux'; // Persist allows the browser to cache our store depending on certain configuration options that we\n// are going to set\n\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; // console.log the actions\n\nimport rootReducer from './root-reducer'; // The store expects the middlewares as arrays\n\nconst middlewares = [logger]; // Spreading in all of the methods or values in the logger array in the function call as individual arguments\n// After including persist, we now export the store out\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // Here we export the persistor that calls the persistStore passing in our store\n\nexport const persistor = persistStore(store); // Exporting the store and the persistor object\n\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/workspace/crown-clothing/crown-clothing/v4_SELECTORS/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootReducer","middlewares","store","persistor"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CACA;AACA;;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAAmC;;AAEnC,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACF,MAAD,CAApB,C,CAEA;AACA;;AACA,OAAO,MAAMG,KAAK,GAAGN,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGI,WAAJ,CAA7B,CAAzB,C,CAEP;;AACA,OAAO,MAAME,SAAS,GAAGL,YAAY,CAACI,KAAD,CAA9B,C,CAEP;;AACA,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["// middlewares catch actions happening between the action taking and the root reducer\nimport { createStore, applyMiddleware } from 'redux';\n// Persist allows the browser to cache our store depending on certain configuration options that we\n// are going to set\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; // console.log the actions\n\nimport rootReducer from './root-reducer';\n\n// The store expects the middlewares as arrays\nconst middlewares = [logger];\n\n// Spreading in all of the methods or values in the logger array in the function call as individual arguments\n// After including persist, we now export the store out\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// Here we export the persistor that calls the persistStore passing in our store\nexport const persistor = persistStore(store);\n\n// Exporting the store and the persistor object\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}